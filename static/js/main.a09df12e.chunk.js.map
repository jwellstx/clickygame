{"version":3,"sources":["components/Nav/Nav.js","components/JumboTron/JumboTron.js","components/Container/Container.js","components/Row/Row.js","components/Card/Card.js","App.js","index.js"],"names":["Nav","className","href","this","props","message","score","topscore","Component","JumboTron","Col","children","Row","Card","checkState","clicked","char","name","onClick","src","image","alt","App","state","characters","clickedStatus","charName","indexOf","setState","sort","Math","random","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"8iGAeeA,G,mLAVP,OACI,yBAAKC,UAAU,0CACX,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,eACA,0BAAMD,UAAU,QAAQE,KAAKC,MAAMC,SACnC,0BAAMJ,UAAU,QAAhB,UAA+BE,KAAKC,MAAME,MAA1C,iBAA+DH,KAAKC,MAAMG,SAA1E,U,GANEC,cCeHC,G,6KAbX,OACE,yBAAKR,UAAU,kCACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aAAd,0BACA,uBAAGA,UAAU,QAAb,qDACoD,wCADpD,gC,GANcO,cCWTE,G,6KATP,OAAS,yBAAKT,UAAU,aACpB,yBAAKA,UAAU,aACVE,KAAKC,MAAMO,e,GAJVH,cCKHI,E,uKAJP,OAAS,yBAAKX,UAAU,OAAOE,KAAKC,MAAMO,c,GAFhCH,aCeHK,G,kNAbXC,WAAa,WACT,EAAKV,MAAMW,QAAQ,EAAKX,MAAMY,KAAKC,O,uDAInC,OACI,oCACA,yBAAKC,QAASf,KAAKW,WAAYb,UAAU,gBAAgBkB,IAAKhB,KAAKC,MAAMY,KAAKI,MAAOC,IAAKlB,KAAKC,MAAMY,KAAKC,Y,GARnGT,c,OC0DJc,E,4MAlDbC,MAAQ,CACNC,WAAY,GACZnB,QAAS,2BACTC,MAAO,EACPC,SAAU,EACVkB,cAAe,I,EAUjBV,QAAU,SAACW,IAC2C,IAAhD,EAAKH,MAAME,cAAcE,QAAQD,GACnC,EAAKE,SAAS,CACZH,cAAe,GACfpB,QAAS,cAAeqB,EAAW,6BACnCpB,MAAO,IAIT,EAAKsB,SAAS,CACZH,cAAc,GAAD,mBAAM,EAAKF,MAAME,eAAjB,CAAgCC,IAC7CrB,QAAS,yBACTC,MAAO,EAAKiB,MAAMjB,MAAQ,EAC1BC,SAAW,EAAKgB,MAAMhB,UAAY,EAAKgB,MAAMjB,MAAS,EAAKiB,MAAMjB,MAAQ,EAAI,EAAKiB,MAAMhB,WAI5F,EAAKqB,SAAS,CAAEJ,WAAY,EAAKD,MAAMC,WAAWK,MAAK,WAAO,MAAO,GAAKC,KAAKC,e,kEAxB5D,IAAD,OAClB5B,KAAKyB,SAAS,CACZJ,WAAYA,EAAWQ,KAAI,SAAChB,GAAD,OAAU,kBAAC,EAAD,CAAMiB,IAAKjB,EAAKkB,GAAIlB,KAAMA,EAAMD,QAAS,EAAKA,iB,+BA0BrF,OACE,oCACA,kBAAC,EAAD,CAAKV,QAASF,KAAKoB,MAAMlB,QAASC,MAAOH,KAAKoB,MAAMjB,MAAOC,SAAUJ,KAAKoB,MAAMhB,WAChF,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,KACKJ,KAAKoB,MAAMC,kB,GA3CNhB,aCLlB2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a09df12e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Nav.css\"\r\n\r\nclass Nav extends Component {\r\n    render() { \r\n        return ( \r\n            <nav className=\"navbar navbar-light bg-light fixed-top\">\r\n                <a className=\"text refresh\" href=\"/\">Clicky Game</a>\r\n                <span className=\"text\">{this.props.message}</span>\r\n                <span className=\"text\">Score: {this.props.score} | Top Score: {this.props.topscore} </span>\r\n            </nav>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Nav;","import React, { Component } from \"react\";\r\nimport \"./JumboTron.css\";\r\n\r\nclass JumboTron extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\" two jumbotron jumbotron-fluid\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4\">Overwatch Clicky Game!</h1>\r\n          <p className=\"lead\">\r\n            A memory based game, click on each character only <strong>once</strong>! Click all 12 to win!\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JumboTron;\r\n","import React, { Component } from 'react';\r\nimport \"./Container.css\"\r\n\r\nclass Col extends Component {\r\n    render() { \r\n        return ( <div className=\"container\">\r\n            <div className=\"col-lg-12\">\r\n                {this.props.children}\r\n            </div>\r\n        </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default Col;","import React, { Component } from 'react';\r\n\r\nclass Row extends Component {\r\n    render() { \r\n        return ( <div className=\"row\">{this.props.children}</div>  );\r\n    }\r\n}\r\n \r\nexport default Row;","import \"./Card.css\";\r\nimport React, { Component } from 'react';\r\n\r\nclass Card extends Component {\r\n    checkState = () => {\r\n        this.props.clicked(this.props.char.name);\r\n    }\r\n    \r\n    render() { \r\n        return (  \r\n            <>\r\n            <img onClick={this.checkState} className=\"m-4 charStyle\" src={this.props.char.image} alt={this.props.char.name}></img>\r\n            </>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Card;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav/Nav\";\nimport JumboTron from \"./components/JumboTron/JumboTron\";\nimport Container from \"./components/Container/Container\";\nimport Row from \"./components/Row/Row\";\nimport Card from \"./components/Card/Card\";\nimport characters from \"./characters.json\";\n\n\nclass App extends Component {\n  state = {\n    characters: [],\n    message: \"Click an image to begin!\",\n    score: 0,\n    topscore: 0,\n    clickedStatus: []\n  }\n\n  componentDidMount() {\n    this.setState({\n      characters: characters.map((char) => <Card key={char.id} char={char} clicked={this.clicked}/>)\n    });\n    \n  }\n\n  clicked = (charName) => {\n    if (this.state.clickedStatus.indexOf(charName) !== -1) {\n      this.setState({\n        clickedStatus: [],\n        message: \"Incorrect, \"+ charName + \" has already been clicked!\",\n        score: 0\n      });\n    }\n    else {\n      this.setState({\n        clickedStatus: [...this.state.clickedStatus, charName],\n        message: \"You guessed correctly!\",\n        score: this.state.score + 1,\n        topscore: (this.state.topscore <= this.state.score) ? this.state.score + 1 : this.state.topscore\n      });\n    }\n\n    this.setState({ characters: this.state.characters.sort(() => {return .5 - Math.random()}) });\n  }\n\n  render() {\n    return (\n      <>\n      <Nav message={this.state.message} score={this.state.score} topscore={this.state.topscore} />\n      <JumboTron />\n      <Container>\n        <Row>\n            {this.state.characters}\n        </Row>\n      </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n"],"sourceRoot":""}